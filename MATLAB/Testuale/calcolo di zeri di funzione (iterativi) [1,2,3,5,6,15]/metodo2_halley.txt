--------------------------------------------------
[2] METODO DI HALLEY
Metodo di Halley per il calcolo degli zeri di una funzione.
--------------------------------------------------

function [x1, i, res] = metodo2_halley(f, f1, f2, x0, tol, n)

    % x0 = xk
    % x1 = xk+1

    % Itero da 0 a n-1
    for i = 0:n-1
        
        fx0 = f(x0);
        f1x0 = f1(x0);  % Derivata prima f'(xk)
        f2x0 = f2(x0);  % Derivata seconda f''(xk)

        % Controllo che il denominatore sia diverso da zero
        den = 2 * (f1x0^2) - fx0 * f2x0;  % Denominatore
        if den == 0
            fprintf("Errore, impossibile dividere per zero.");
            return  % Termino
        end

        num = 2 * fx0 * f1x0;  % Numeratore
        x1 = x0 - num/den;  % Risultato finale

        % Verifico se l'errore Ã¨ minore della tolleranza (e termino)
        err = abs(x1-x0) / abs(x1);  % Errore relativo
        if err < tol
            res = f(x1);  % Salvo il residuo
            return  % Termino
        end

        % Approssimazione
        x0 = x1;

    end

    i = -1;  % Flag di errore
    res = f(x1);  % Salvo il residuo

end


--------------------------------------------------
[2] METODO DI HALLEY: TEST
--------------------------------------------------

clear
clc

f = @(x) sin(x) - x^3;
f1 = @(x) cos(x) - 3 * x^2;
f2 = @(x) - sin(x) - 6 * x;
x0 = 1;
tol = 1e-12;
n = 100;

[x1, i, res] = metodo2_halley(f, f1, f2, x0, tol, n);

fprintf("Soluzione: %f\n", x1);
fprintf("Iterate: %d\n", i);
fprintf("Residuo: %d\n", res);
